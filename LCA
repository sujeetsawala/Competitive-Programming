const int N=100005;
vector<int> a[N];

void init(int u,int par)
{
	if(par!=0)
	{
		dp[u][0]=par;	
		dep[u]=dep[par]+1;
	}
	for(int i=0;i<a[u].size();i++)
	{
		int v=a[u][i];
		if(v!=par)
			init(v,u);
 	}
}

int lca(int u,int v)
{
	if(dep[u]<dep[v])
		swap(u,v);

	int diff=dep[u]-dep[v];



	for(int j=21;j>=0;j--)
	{
		if(diff&(1<<j))
			u=dp[u][j];
	}

	if(u==v)
		return u;


	for(int j=21;j>=0;j--)
	{
		if(dp[u][j]!=dp[v][j])
		{
			u=dp[u][j];
			v=dp[v][j];
		}
	}

	return dp[u][0];

}

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0);
 	
 	 //For getting input from input.txt file
	//freopen("input.txt", "r", stdin);
 
	 //Printing the Output to output.txt file
	//freopen("output.txt", "w", stdout);
	


	ms(dp,-1);
	ms(dep,0);
	init(node1,0);

	for(int j=1;j<=21;j++)
	{
		for(int i=1;i<=n;i++)
		{
			if(dp[i][j-1]!=-1)
				dp[i][j]=dp[dp[i][j-1]][j-1];
		}
	}
 	return 0;
}
